trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - pipelines/*
    - deploy/*

variables:
    dockerid:   'bjd145'
    imageName:  'bjd145/whatos'
    blueWeight: 0
    blueReplicas: 0
    greenWeight: 0
    greenReplicas: 0

stages:
- stage: builds
  jobs: 
  - job: 'Build_And_Push'
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
         
    - bash: |
        echo $(dockerPassword) | docker login -u $(dockerId) --password-stdin
      displayName: Log into Docker

    - bash: |
        cd src
        docker build -t $(imageName):1.0 .
        docker push $(imageName):1.0
      displayName: Build and Push Container v1.0

    - bash: |
        cd src
        docker build -t $(imageName):2.0 .
        docker push $(imageName):2.0
      displayName: Build and Push Container v2.0

    - task: CopyFiles@2
      inputs:
        SourceFolder: deploy
        TargetFolder: '$(build.artifactstagingdirectory)'
      displayName: Copy Artifacts  

    - task: PublishBuildArtifacts@1
      displayName: Publish Build Artifacts 

- stage: deploy_canary_relaese
  jobs:
  - deployment: 'Deploy_To_AKS'
    pool:
      vmImage: 'Ubuntu 16.04'
    environment: 'AKS.whatosapi'
    strategy:
      canary:
        increments: [10,50,90] 
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              targetPath: '$(System.DefaultWorkingDirectory)/'
          - task: PowerShell@2
            displayName: "Deteremine Helm Values"
            inputs:
              targetType: 'inline'
              script: |
                $pods = @{ "0" = 0; "10" = 1; "50" = 2; "90" = 3; "100" = 4 }

                $green = $(strategy.increment)
                $blue  = 100 - $(strategy.increment)
                
                $blueReplicas = $pods[[convert]::ToString($blue)]
                $greenReplicas = $pods[[convert]::ToString($green)]

                $blueWeight = "{0}%" -f $blue
                $greenWeight = "{0}%" -f $green

                Write-Host "##vso[task.setvariable variable=blueWeight]$blueWeight"
                Write-Host "##vso[task.setvariable variable=greenWeight]$greenWeight"
                Write-Host "##vso[task.setvariable variable=blueReplicas]$blueReplicas"
                Write-Host "##vso[task.setvariable variable=greenReplicas]$greenReplicas"
          - task: HelmInstaller@0
            displayName: 'Install Helm 3.0.2'
            inputs:
              helmVersionToInstall: '3.0.2'
          - task: HelmDeploy@0
            displayName: 'helm upgrade'
            inputs:
              azureSubscription: 'BJD_APP02_Subscription'
              azureResourceGroup: 'DevSub02_K8S01_RG'
              kubernetesCluster: bjdk8s01
              namespace: whatosapi
              command: upgrade
              chartType: filepath
              chartPath: './drop/helm'
              releaseName: whatosapi
              install: true
              overrideValues: 'service.greenWeight=$(greenWeight),service.blueWeight=$(blueWeight),greenReplicaCount=$(greenReplicas),blueReplicaCount=$(blueReplicas) '
              valueFile: './drop/helm/values.yaml'

        on:
          failure:         
            steps:
            - task: HelmDeploy@0
              displayName: 'helm rollback'
              inputs:
                azureSubscription: 'BJD_APP02_Subscription'
                azureResourceGroup: 'DevSub02_K8S01_RG'
                kubernetesCluster: bjdk8s01
                namespace: whatosapi
                command: rollback
                arguments: 'whatosapi 0'